<Window x:Class="ClusterSurveillance.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:ClusterSurveillance.MVVM.ViewModel"
        xmlns:svg="clr-namespace:SVGImage.SVG;assembly=DotNetProjects.SVGImage"
        xmlns:tb="http://www.hardcodet.net/taskbar" 
        mc:Ignorable="d"
        Title="{Binding Title}" 
        Height="720"
        Width="1280" 
        MinWidth="1024" 
        MinHeight="620" 
        WindowStartupLocation="CenterScreen" 
        WindowStyle="None"
        Margin="6,6,5,0" Icon="/PatiserieIcon.png"
        >
    <Window.DataContext>
        <viewModel:MainViewModel/>
    </Window.DataContext>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="55" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                            <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#12FFFFFF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                            <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#AAFF4242" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#272537">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="55"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <tb:TaskbarIcon
                    Visibility="Visible"
                    ToolTipText="Patisserie working"
                    IconSource="/Images/icon.ico"
                    PopupActivation="DoubleClick"
            TrayLeftMouseUp="NotifyIcon"
            >
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Exit Patisserie" Click="Shutdown"/>
                    <MenuItem Header="Stop Client" Command="{Binding StopClientCommand}">
                        <MenuItem.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Connector.Status}" Value="0">
                                        <Setter Property="MenuItem.Header" Value="Start Client"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="MenuItem.Header" Value="Stop Client"/>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
        <Border Background="#FF343148" Grid.ColumnSpan="2" Grid.Row="0" BorderBrush="#775A5961" BorderThickness="0,0,0,1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="150"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <svg:SVGImage Source="ClusterSurveillance;component/Images/eclair.svg" Margin="20,0,10,0" HorizontalAlignment="Left" Height="22" Width="22"/>
                    <TextBlock Text="Pâtisserie" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="20" FontFamily="Poppins Medium" Foreground="White"/>
                </StackPanel>
                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="1" Orientation="Horizontal">
                    <RadioButton Height="35" MinWidth="35" Style="{StaticResource TitleButtonTheme}" Background="#12FFFFFF" Command="{Binding OptionViewCommand}" Foreground="White" IsChecked="{Binding Path=OptionsIsChecked}">
                        <Path
			                Width="35"
			                Height="35"
			                Data="M 18,11 27,20 M 18,20 27,11"
			                Stroke="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
			                StrokeThickness="1" />
                    </RadioButton>
                    <RadioButton Height="35" MinWidth="35" Style="{StaticResource TitleButtonTheme}" Background="#12FFFFFF" Command="{Binding TroubleshootViewCommand}" IsChecked="{Binding TroubleshootIsChecked}"/>
                </StackPanel>
                <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <Button
		                Click="Minimize"
		                RenderOptions.EdgeMode="Aliased"
		                Style="{StaticResource TitleBarButtonStyle}">
                        <Path
			                Width="46"
			                Height="32"
			                Data="M 18,15 H 28"
			                Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			                StrokeThickness="1" />
                    </Button>
                    <Button Name="maximizeButton" Click="Maximize" Style="{StaticResource TitleBarButtonStyle}">
                        <Path   Width="46"
			                    Height="32"
			                    Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z"
			                    Stroke="{Binding Path=Foreground,
							    RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			                    StrokeThickness="1" />
                    </Button>
                    <Button
		                Click="Exit"
		                Style="{StaticResource TitleBarCloseButtonStyle}">
                        <Path
			                Width="46"
			                Height="32"
			                Data="M 18,11 27,20 M 18,20 27,11"
			                Stroke="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			                StrokeThickness="1" />
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
        <Grid Background="#FF211F2F" Grid.Column="0" Grid.Row="1">
            <StackPanel Grid.Row="0" Orientation="Vertical" VerticalAlignment="Top" >
                <RadioButton Content="Clients" Height="50" Foreground="White" FontSize="14" Style="{StaticResource MenuButtonTheme}" Command="{Binding ServerViewCommand}" IsChecked="True"/>
                <RadioButton Content="Logging" Height="50" Foreground="White" FontSize="14" Style="{StaticResource MenuButtonTheme}" Command="{Binding LoggingViewCommand}"/>
            </StackPanel>
        </Grid>
        
        
        <ContentControl Grid.Row="1" Grid.Column="1" Content="{Binding CurrentView}"/>
        <ContentControl Grid.Row="1" Grid.ColumnSpan="2" Content="{Binding OptionView}"/>


        <Border Name="StatusMessage" MaxWidth="200" Background="#FF706B86" Grid.Row="1" CornerRadius="5" VerticalAlignment="Bottom" HorizontalAlignment="Center" RenderTransformOrigin="0.5,1" Opacity="0" Margin="0,0,0,35">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="0.5" ScaleX="0.5" x:Name="StatusMessageScaleTransform"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Border.RenderTransform>
            <TextBlock Text="{Binding Connector.StatusMessage}" Margin="8, 4" Foreground="White" FontFamily="Poppins Medium" FontSize="11"/>
        </Border>
        <Border Grid.Row="1" Opacity="1" x:Name="StatusBar" Height="25" VerticalAlignment="Bottom">
            <Border.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                    Storyboard.TargetName="StatusMessage"
                                    Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.12">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseIn"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                    Storyboard.TargetName="StatusMessageScaleTransform"
                                    Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.12" >
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseIn"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                    Storyboard.TargetName="StatusMessageScaleTransform"
                                    Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.12">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseIn"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                    Storyboard.TargetName="StatusMessage"
                                    Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.12">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                    Storyboard.TargetName="StatusMessageScaleTransform"
                                    Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="0.5" Duration="0:0:0.12">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                    Storyboard.TargetName="StatusMessageScaleTransform"
                                    Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="0.5" Duration="0:0:0.12">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Border.Triggers>
            <Border.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Connector.Status}" Value="0">
                            <Setter Property="Border.Background" Value="#FF9BAAB5"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Connector.Status}" Value="1">
                            <Setter Property="Border.Background" Value="#FFF7E519"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Connector.Status}" Value="2">
                            <Setter Property="Border.Background" Value="#FF2FFFA4"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <svg:SVGImage Source="ClusterSurveillance;component/Images/cube.svg" Margin="3" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
        </Border>
    </Grid>
</Window>
