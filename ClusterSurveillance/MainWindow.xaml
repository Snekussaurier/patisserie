<Window x:Class="ClusterSurveillance.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:ClusterSurveillance.MVVM.ViewModel"
        xmlns:svg="clr-namespace:SVGImage.SVG;assembly=DotNetProjects.SVGImage"
        xmlns:tb="http://www.hardcodet.net/taskbar" 
        mc:Ignorable="d"
        Title="{Binding Title}" 
        Height="720"
        Width="1280" 
        MinWidth="1024" 
        MinHeight="620" 
        WindowStartupLocation="CenterScreen" 
        WindowStyle="None"
        Margin="6,6,5,0" Icon="/PatiserieIcon.png"
        Background="#F1F3F5"
        >
    <Window.DataContext>
        <viewModel:MainViewModel/>
    </Window.DataContext>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="55" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <SolidColorBrush x:Key="ClientClosed" Color="#FF9BAAB5" />
        <SolidColorBrush x:Key="ClientConnecting" Color="#FFD43B" />
        <SolidColorBrush x:Key="ClientOpen" Color="#69DB7C" />

        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="0" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
					x:Name="border"
					Background="{TemplateBinding Background}"
					BorderThickness="0"
					SnapsToDevicePixels="true"
                            Width="12"
                            Height="12"
                            CornerRadius="6">
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="230"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <tb:TaskbarIcon
                    Visibility="Visible"
                    ToolTipText="Patisserie working"
                    IconSource="/Images/icon.ico"
                    PopupActivation="DoubleClick"
            TrayLeftMouseUp="NotifyIcon"
            >
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Exit Patisserie" Click="Shutdown"/>
                    <MenuItem Command="{Binding StartStopClientCommand}">
                        <MenuItem.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Connector.Status}" Value="0">
                                        <Setter Property="MenuItem.Header" Value="Start Client"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="MenuItem.Header" Value="Stop Client"/>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
        <Border Background="#FFFFFF" Grid.Column="0" Grid.Row="1">
            <StackPanel Grid.Row="0" Orientation="Vertical" VerticalAlignment="Top" Margin="0,115,0,0">
                <RadioButton Content="Dashboard" Foreground="White" FontSize="14" Style="{StaticResource MenuButtonTheme}" Command="{Binding ServerViewCommand}" IsChecked="True"/>
                <RadioButton Content="Server" Foreground="White" FontSize="14" Style="{StaticResource MenuButtonTheme}"/>
                <RadioButton Content="Logging" Foreground="White" FontSize="14" Style="{StaticResource MenuButtonTheme}" Command="{Binding LoggingViewCommand}"/>
            </StackPanel>
        </Border>

        <Border Height="50" Grid.ColumnSpan="2" VerticalAlignment="Top">
            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0">
                <Button
		                Click="Exit"
		                Style="{StaticResource TitleBarButtonStyle}"
                    Background="#FA5252">
                </Button>
                <Button Name="maximizeButton" 
                        Click="Minimize" 
                        Style="{StaticResource TitleBarButtonStyle}"
                        Background="#FFD43B">
                </Button>
                <Button
		                Click="Maximize"
		                Style="{StaticResource TitleBarButtonStyle}"
                    Background="#69DB7C">>
                </Button>
            </StackPanel>
        </Border>


        <ContentControl Grid.Row="1" Grid.Column="1" Content="{Binding CurrentView}"/>
        <ContentControl Grid.Row="1" Grid.ColumnSpan="2" Content="{Binding OptionView}"/>


        <Border Name="StatusMessage" MaxWidth="200" Background="#212529" Grid.Row="1" CornerRadius="5" VerticalAlignment="Bottom" HorizontalAlignment="Center" RenderTransformOrigin="0.5,1" Opacity="0" Margin="0,0,0,35">
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="0.5" ScaleX="0.5" x:Name="StatusMessageScaleTransform"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Border.RenderTransform>
            <TextBlock Text="{Binding Connector.StatusMessage}" Margin="8, 4" Foreground="White" FontFamily="Poppins Medium" FontSize="11"/>
        </Border>
        <Border Grid.Row="1" Opacity="1" x:Name="StatusBar" Height="25" VerticalAlignment="Bottom">
            <Border.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                    Storyboard.TargetName="StatusMessage"
                                    Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.12">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseIn"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                    Storyboard.TargetName="StatusMessageScaleTransform"
                                    Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.12" >
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseIn"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                    Storyboard.TargetName="StatusMessageScaleTransform"
                                    Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.12">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseIn"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                    Storyboard.TargetName="StatusMessage"
                                    Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.12">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                    Storyboard.TargetName="StatusMessageScaleTransform"
                                    Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="0.5" Duration="0:0:0.12">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                    Storyboard.TargetName="StatusMessageScaleTransform"
                                    Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="0.5" Duration="0:0:0.12">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Border.Triggers>
            <Border.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Connector.Status}" Value="0">
                            <Setter Property="Border.Background" Value="{StaticResource ClientClosed}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Connector.Status}" Value="1">
                            <Setter Property="Border.Background" Value="{StaticResource ClientConnecting}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Connector.Status}" Value="2">
                            <Setter Property="Border.Background" Value="{StaticResource ClientOpen}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <svg:SVGImage Source="ClusterSurveillance;component/Images/cube.svg" Margin="3" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
        </Border>
    </Grid>
</Window>
